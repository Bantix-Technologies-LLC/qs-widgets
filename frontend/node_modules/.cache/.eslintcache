[{"/Users/sussman/qs-widgets/frontend/src/index.js":"1","/Users/sussman/qs-widgets/frontend/src/reportWebVitals.js":"2","/Users/sussman/qs-widgets/frontend/src/App.js":"3","/Users/sussman/qs-widgets/frontend/src/EventConGraph.js":"4"},{"size":535,"mtime":1682460934309,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1682460934310,"results":"7","hashOfConfig":"6"},{"size":1202,"mtime":1682563801514,"results":"8","hashOfConfig":"6"},{"size":80647,"mtime":1682564541189,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"3t7zg1",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/sussman/qs-widgets/frontend/src/index.js",[],[],[],"/Users/sussman/qs-widgets/frontend/src/reportWebVitals.js",[],[],"/Users/sussman/qs-widgets/frontend/src/App.js",["25","26","27","28","29","30","31","32","33","34","35","36","37","38"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport EventConGraph from \"./EventConGraph\";\n\nimport React, { useEffect, useMemo, useRef } from \"react\";\nimport { useState } from \"react\";\nimport {\n  Route,\n  Routes,\n  Switch,\n  Redirect,\n  BrowserRouter as Router,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\n// import { useRouter } from \"next/router\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Helmet } from \"react-helmet\";\n// import ErrorComponent from \"./Components/ErrorComponent\";\nimport axios from \"axios\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"appContainer\" id=\"inner-container\">\n        <main id=\"page-wrap\">\n          <Router>\n            <Routes>\n              <Route\n                path=\"/\"\n                element={\n                  <div style={{ height: \"100px\", width: \"1000px\" }}>\n                    <EventConGraph />\n                  </div>\n                }\n              ></Route>\n            </Routes>\n          </Router>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/sussman/qs-widgets/frontend/src/EventConGraph.js",["39","40","41","42"],["43","44","45","46","47"],"import React, { useReducer } from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport \"./EventConGraph.css\";\nimport Highcharts from \"highcharts/highstock\";\nimport indicatorsAll from \"highcharts/indicators/indicators-all\";\nimport annotationsAdvanced from \"highcharts/modules/annotations-advanced\";\nimport priceIndicator from \"highcharts/modules/price-indicator\";\nimport fullScreen from \"highcharts/modules/full-screen\";\nimport stockTools from \"highcharts/modules/stock-tools\";\nimport QSIcon from \"./graphQS.png\";\nimport { useMediaQuery } from \"react-responsive\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport { NavDropdown, Dropdown } from \"react-bootstrap\";\nimport { ExclamationTriangle } from \"react-bootstrap-icons\";\n// import ExpiryFutSymbolButton from \"../../Components/ExpiryFutSymbolButton\";\n// import ProdNameToSym from \"../../AuxillaryFunctions/ProdNameToSym\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\nindicatorsAll(Highcharts);\nannotationsAdvanced(Highcharts);\npriceIndicator(Highcharts);\nfullScreen(Highcharts);\nstockTools(Highcharts);\n\n//Graph for OHLC, Volume, and OI for given future sym\nconst EODSummaryGraph = (props) => {\n  const zoomButton = useRef(null);\n  const isMobile = useMediaQuery({ query: `(max-width: 1200px)` }); //state for detecting device that app is running on\n  const chartRef = useRef(null);\n  const containerRef = useRef(null);\n  const loadSpinnerRef = useRef(null);\n  const noneAvailRef = useRef(null);\n\n  const [data, setData] = useState([\n    [1609560063, 0, 0, 0, 0, 0],\n    [\n      Date.parse(new Date().toUTCString()) -\n        new Date(new Date().toUTCString() + \" UTC\").getTimezoneOffset() * 60000,\n      0,\n      0,\n      0,\n      0,\n      0,\n    ],\n  ]);\n\n  const [groupingUnits, setGroupingUnits] = useState();\n\n  const [options, setOptions] = useState();\n\n  //used to store top right expiry buttons` DOM node and programatically scroll to left 0 on render\n  const expButtonsRef = useRef(null);\n\n  //SET HIGHCHARTS OPTIONS\n  useEffect(() => {\n    try {\n      if (data.includes(\"noneAvail\"))\n        containerRef.current.style.opacity = \"0.6\";\n    } catch {}\n    Highcharts.setOptions({\n      lang: {\n        decimalPoint: \".\",\n        thousandsSep: \",\",\n      },\n    });\n    chartRef.current = Highcharts.stockChart(containerRef.current, {\n      chartType: \"stock\",\n      navigator: {\n        enabled: false,\n        handles: !props.lightMode\n          ? {\n              backgroundColor: \"#666\",\n              borderColor: \"#AAA\",\n            }\n          : {},\n\n        outlineColor: !props.lightMode ? \"#CCC\" : \"#cccccc\",\n        maskFill: \"rgba(255,255,255,0.1)\",\n        xAxis: {\n          //   type: \"categories\",\n\n          //   categories: data.map((d, i) => data[i][0]),\n          gridLineColor: !props.lightMode ? \"#505053\" : \"#e6e6e6\",\n          dateTimeLabelFormats: {\n            month: \"%b %e, %Y\",\n            week: \"%b %e, %Y\",\n            day: \"%b %e\",\n            hour: \"%l %P\",\n            minute: \"%l:%M %P\",\n          },\n        },\n        series: {\n          color: !props.lightMode ? \"#7798BF\" : undefined,\n          lineColor: \"#A6C7ED\",\n          type: \"line\",\n        },\n      },\n      drilldown: {\n        activeAxisLabelStyle: {\n          color: !props.lightMode ? \"#F0F0F3\" : \"#003399\",\n        },\n        activeDataLabelStyle: {\n          color: !props.lightMode ? \"#F0F0F3\" : \"#003399\",\n        },\n      },\n      navigation: {\n        buttonOptions: {\n          symbolStroke: !props.lightMode ? \"#DDDDDD\" : \"#666666\",\n          theme: {\n            fill: !props.lightMode ? \"#505053\" : {},\n            states: {\n              hover: {\n                fill: !props.lightMode ? \"#707073\" : {},\n              },\n              select: {\n                fill: !props.lightMode ? \"#707073\" : {},\n              },\n            },\n          },\n        },\n        bindingsClassName: \"tools-container\", // informs Stock Tools where to look for HTML elements for adding technical indicators, annotations etc.\n      },\n      stockTools: {\n        gui: {\n          enabled: isMobile ? false : true, // disable the built-in toolbar\n          buttons: [\n            \"fullScreen\",\n            \"currentPriceIndicator\",\n            \"typeChange\",\n            \"separator\",\n\n            \"indicators\",\n            \"simpleShapes\",\n            \"lines\",\n            \"crookedLines\",\n            \"measure\",\n            \"advanced\",\n            \"toggleAnnotations\",\n            \"separator\",\n            \"verticalLabels\",\n            \"flags\",\n            \"separator\",\n            \"zoomChange\",\n\n            \"separator\",\n            \"saveChart\",\n          ],\n        },\n      },\n      legend: isMobile\n        ? {\n            itemHoverStyle: {\n              color: !props.lightMode ? \"#FFF\" : {},\n            },\n            itemHiddenStyle: {\n              color: !props.lightMode ? \"#606063\" : {},\n            },\n            title: {\n              style: {\n                color: !props.lightMode ? \"#C0C0C0\" : {},\n              },\n            },\n            itemStyle: {\n              color: !props.lightMode ? \"#E0E0E3\" : {},\n\n              fontSize: \"11px\",\n              fontWeight: \"normal\",\n            },\n            padding: 6,\n            margin: 8,\n            enabled: true,\n          }\n        : {\n            width:\n              props.EODSummaryType ===\n                \"CallYTDVol, CallYTDADV, CallADV, CallVol, PutYTDVol, PutYTDADV, PutADV, PutVol\" ||\n              props.EODSummaryType === \"FutYTDVol\" ||\n              props.EODSummaryType === \"FutYTDADV\"\n                ? 500\n                : 500,\n\n            itemHoverStyle: {\n              color: !props.lightMode ? \"#FFF\" : {},\n            },\n            itemHiddenStyle: {\n              color: !props.lightMode ? \"#606063\" : {},\n            },\n            title: {\n              style: {\n                color: !props.lightMode ? \"#C0C0C0\" : {},\n              },\n            },\n\n            itemStyle: {\n              //   textOverflow: null,\n              //   width: 60, // or whatever\n              color: !props.lightMode ? \"#E0E0E3\" : {},\n              fontSize: \"11px\",\n              fontWeight: \"normal\",\n            },\n            padding: 6,\n            margin: 8,\n            align: \"right\",\n            verticalAlign: \"top\",\n            y: -115,\n            x: -25,\n            enabled: true,\n          },\n      chart: {\n        zoomType: \"x\",\n        panning: true,\n\n        panKey: \"shift\",\n        type: \"column\",\n        marginTop: 0,\n        marginBottom: 50,\n        backgroundColor: !props.lightMode\n          ? {\n              linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n              stops: [\n                [0, \"rgb(30,38,50)\"],\n                [1, \"rgb(56,70,86)\"],\n              ],\n            }\n          : \"white\",\n\n        borderColor: !props.lightMode ? \"#606063\" : {},\n        plotBorderColor: !props.lightMode ? \"#606063\" : {},\n        borderWidth: 1,\n        height: 550,\n        events: {\n          render: function () {\n            const chart = this,\n              renderer = chart.renderer;\n            try {\n              if (\n                document.getElementsByClassName(\"highcharts-data-table\")[0] &&\n                document.getElementsByClassName(\"highcharts-data-table\")[0]\n                  .style.display !== \"none\"\n              ) {\n                document.getElementsByClassName(\n                  \"highcharts-data-table\"\n                )[0].style.display = \"none\";\n                chart.viewData();\n              }\n              // chart.options.exporting.menuItemDefinitions.viewData.onclick();\n              // try {\n              //   chart.options.exporting.menuItemDefinitions.viewData.onclick();\n              // } catch {}\n            } catch {}\n            // Delete groups\n            if (chart.customImgGroup) {\n              chart.customImgGroup.destroy();\n            }\n\n            // Create groups\n            chart.customImgGroup = renderer.g(\"customImgGroup\").add();\n\n            // Render texts\n            chart.renderer\n              .image(QSIcon, chart.plotLeft + chart.plotSizeX - 75, 75, 50, 50)\n              .add(chart.customImgGroup);\n          },\n          load() {\n            if (!isMobile) {\n              let chart = this;\n              chart.stockTools.showhideBtn.click();\n            }\n          },\n\n          selection: function () {\n            var ch = this;\n            zoomButton.current = ch.renderer\n              .button(\n                \"Reset zoom\",\n                null,\n                null,\n                function () {\n                  ch.xAxis[0].setExtremes(null, null);\n                },\n                {\n                  zIndex: 20,\n                }\n              )\n              .attr({\n                id: \"resetZoom\",\n                align: \"right\",\n                title: \"Reset zoom level 1:1\",\n              })\n              .add()\n              .align(\n                {\n                  align: \"right\",\n                  x: -15,\n                  y: 40,\n                },\n                false,\n                null\n              );\n          },\n        },\n      },\n      labels: {\n        style: !props.lightMode\n          ? {\n              color: \"#707073\",\n            }\n          : {},\n      },\n\n      plotOptions: {\n        series: {\n          dataLabels: {\n            color: !props.lightMode ? \"#F0F0F3\" : {},\n            style: {\n              fontSize: \"13px\",\n            },\n          },\n          marker: !props.lightMode\n            ? {\n                lineColor: \"#333\",\n              }\n            : {},\n          turboThreshold: 10000,\n          dataGrouping: {\n            enabled: false,\n          },\n          states: {\n            hover: { enabled: data.includes(\"noneAvail\") ? false : true },\n\n            inactive: {\n              opacity: 1,\n            },\n          },\n        },\n        boxplot: {\n          fillColor: !props.lightMode ? \"#505053\" : {},\n        },\n        candlestick: {\n          maxPointWidth: 25,\n\n          lineColor: !props.lightMode ? \"white\" : \"black\",\n        },\n        errorbar: {\n          color: !props.lightMode ? \"white\" : {},\n        },\n        line: {\n          lineWidth: 1,\n        },\n        ohlc: {\n          maxPointWidth: 25,\n        },\n        column: {\n          maxPointWidth: 25,\n          stacking:\n            props.EODSummaryType === \"CallADV, PutADV, FutADV\" ||\n            props.EODSummaryType ===\n              \"CallYTDVol, CallYTDADV, CallADV, CallVol, PutYTDVol, PutYTDADV, PutADV, PutVol\"\n              ? \"normal\"\n              : \"normal\",\n          //   dataLabels: {\n          //     enabled: true,\n          //   },\n        },\n      },\n      scrollbar: !props.lightMode\n        ? {\n            barBackgroundColor: \"#808083\",\n            barBorderColor: \"#808083\",\n            buttonArrowColor: \"#CCC\",\n            buttonBackgroundColor: \"#606063\",\n            buttonBorderColor: \"#606063\",\n            rifleColor: \"#FFF\",\n            trackBackgroundColor: \"#404043\",\n            trackBorderColor: \"#404043\",\n          }\n        : {},\n      rangeSelector: {\n        buttonTheme: !props.lightMode\n          ? {\n              fill: \"rgb(44,56,72)\",\n              stroke: \"#000000\",\n              style: {\n                color: \"#ccc\",\n              },\n              states: {\n                hover: {\n                  fill: \"#707073\",\n                  stroke: \"#000000\",\n                  style: {\n                    color: \"white\",\n                  },\n                },\n                select: {\n                  fill: \"#000003\",\n                  stroke: \"#000000\",\n                  style: {\n                    color: \"white\",\n                  },\n                },\n                disabled: {\n                  fill: \"#999\",\n                  style: {\n                    color: \"#bbb\",\n                  },\n                },\n              },\n            }\n          : {},\n        inputStyle: !props.lightMode\n          ? {\n              backgroundColor: \"#333\",\n              color: \"silver\",\n            }\n          : {},\n        labelStyle: {\n          color: !props.lightMode ? \"silver\" : {},\n        },\n        selected: 5,\n        enabled: true,\n        inputEnabled:\n          isMobile ||\n          props.EODSummaryType === \"FutYTDVol\" ||\n          props.EODSummaryType === \"FutYTDADV\"\n            ? false\n            : true,\n        allButtonsEnabled: true,\n        verticalAlign: \"top\",\n        dropdown: isMobile ? \"never\" : \"responsive\",\n        x: isMobile ? 0 : 0,\n        y: 0,\n        inputPosition: isMobile\n          ? {\n              x: 0,\n              y: 0,\n            }\n          : {},\n        height: 75,\n\n        buttons: [\n          {\n            type: \"month\",\n            count: 1,\n            text: \"1m\",\n          },\n          {\n            type: \"month\",\n            count: 3,\n            text: \"3m\",\n          },\n          {\n            type: \"month\",\n            count: 6,\n            text: \"6m\",\n          },\n          {\n            type: \"ytd\",\n            text: \"YTD\",\n          },\n          {\n            type: \"year\",\n            count: 1,\n            text: \"1y\",\n          },\n          {\n            type: \"all\",\n            text: \"All\",\n          },\n        ],\n      },\n\n      title: {\n        text:\n          props.EODSummaryType === \"FutADV & FutOpnInt\"\n            ? props.prodName + \" Monthly Fut ADV and OI\"\n            : props.EODSummaryType === \"CallADV, PutADV, FutADV\"\n            ? props.prodName + \" Monthly Option ADV\"\n            : props.EODSummaryType ===\n              \"CallOpenInt, PutOpenInt, CallVol, PutVol\"\n            ? props.prodName + \" Monthly OI & Vol\"\n            : props.EODSummaryType ===\n              \"OICallChg, OIPutChg, CallVolChg, PutVolChg\"\n            ? props.prodName + \" Monthly OI & Vol Chg\"\n            : props.EODSummaryType === \"FutYTDVol\"\n            ? props.prodName + \" Year Over Year Monthly Volume\"\n            : props.EODSummaryType === \"FutYTDADV\"\n            ? props.prodName + \" Year Over Year Monthly ADV\"\n            : props.EODSummaryType ===\n              \"CallYTDVol, CallYTDADV, CallADV, CallVol, PutYTDVol, PutYTDADV, PutADV, PutVol\"\n            ? props.prodName + \" Monthly YTD Vol & ADV\"\n            : \"\",\n        align: \"left\",\n        style: {\n          color: !props.lightMode ? \"#E0E0E3\" : {},\n          textTransform: \"uppercase\",\n          fontSize: \"16px\",\n        },\n      },\n      subtitle: {\n        style: {\n          color: !props.lightMode ? \"#E0E0E3\" : {},\n          textTransform: \"uppercase\",\n        },\n      },\n      xAxis: {\n        events: {\n          setExtremes: function (event) {\n            if (\n              (!event.min && !event.max) ||\n              (event.min === event.dataMin && event.max === event.dataMax) ||\n              event.rangeSelectorButton?.text === \"All\"\n            ) {\n              try {\n                zoomButton.current.destroy();\n              } catch {}\n            }\n          },\n        },\n\n        minRange: 1,\n        startOnTick: true,\n        showLastLabel: true,\n\n        gridLineColor: !props.lightMode ? \"#444\" : \"#e6e6e6\",\n        // offset: 150,\n        type: \"datetime\",\n        labels: {\n          step: 1,\n          style: {\n            color: !props.lightMode ? \"#E0E0E3\" : {},\n          },\n        },\n        lineColor: !props.lightMode ? \"#707073\" : {},\n        minorGridLineColor: !props.lightMode ? \"#505053\" : \"#f2f2f2\",\n        tickColor: !props.lightMode ? \"#707073\" : {},\n        title: {\n          style: {\n            color: !props.lightMode ? \"#A0A0A3\" : {},\n          },\n        },\n        dateTimeLabelFormats: {\n          month:\n            props.EODSummaryType === \"FutYTDVol\" ||\n            props.EODSummaryType === \"FutYTDADV\"\n              ? \"%b<br/>\"\n              : \"%b<br/>%Y\",\n          week:\n            props.EODSummaryType === \"FutYTDVol\" ||\n            props.EODSummaryType === \"FutYTDADV\"\n              ? \"%b %e<br/>\"\n              : \"%b %e<br/>%Y\",\n          day: \"%b %e\",\n          hour: \"%l %P\",\n          minute: \"%l:%M %P\",\n          second: \"%l:%M:%S %P\",\n          millisecond: \"%l:%M:%S %P\",\n        },\n\n        gridLineWidth: 1,\n      },\n      yAxis:\n        props.EODSummaryType === \"FutADV & FutOpnInt\"\n          ? [\n              {\n                showEmpty: false,\n\n                endOnTick: true,\n                gridLineColor: !props.lightMode ? \"#707073\" : \"#e6e6e6\",\n                lineColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                minorGridLineColor: !props.lightMode ? \"#505053\" : \"#f2f2f2\",\n                tickColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Fut ADV\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                height: \"65%\",\n                lineWidth: 1,\n                resize: {\n                  enabled: true,\n                },\n                top: \"0%\",\n              },\n              {\n                showEmpty: false,\n\n                gridLineColor: !props.lightMode ? \"#707073\" : {},\n                lineColor: !props.lightMode ? \"#707073\" : {},\n                minorGridLineColor: !props.lightMode ? \"#505053\" : {},\n                tickColor: !props.lightMode ? \"#707073\" : {},\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Fut OI\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                top: \"65%\",\n                height: \"35%\",\n                offset: 0,\n                lineWidth: 1,\n              },\n            ]\n          : props.EODSummaryType === \"CallADV, PutADV, FutADV\"\n          ? [\n              {\n                showEmpty: false,\n\n                endOnTick: true,\n                gridLineColor: !props.lightMode ? \"#707073\" : \"#e6e6e6\",\n                lineColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                minorGridLineColor: !props.lightMode ? \"#505053\" : \"#f2f2f2\",\n                tickColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Option ADV\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                height: \"65%\",\n                lineWidth: 1,\n                resize: {\n                  enabled: true,\n                },\n                top: \"0%\",\n              },\n              {\n                showEmpty: false,\n\n                gridLineColor: !props.lightMode ? \"#707073\" : {},\n                lineColor: !props.lightMode ? \"#707073\" : {},\n                minorGridLineColor: !props.lightMode ? \"#505053\" : {},\n                tickColor: !props.lightMode ? \"#707073\" : {},\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Fut ADV\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                top: \"65%\",\n                height: \"35%\",\n                offset: 0,\n                lineWidth: 1,\n              },\n            ]\n          : props.EODSummaryType === \"CallOpenInt, PutOpenInt, CallVol, PutVol\"\n          ? [\n              {\n                showEmpty: false,\n\n                endOnTick: true,\n                gridLineColor: !props.lightMode ? \"#707073\" : \"#e6e6e6\",\n                lineColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                minorGridLineColor: !props.lightMode ? \"#505053\" : \"#f2f2f2\",\n                tickColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Open Interest\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                height: \"50%\",\n                lineWidth: 1,\n                resize: {\n                  enabled: true,\n                },\n                top: \"0%\",\n              },\n              {\n                showEmpty: false,\n\n                gridLineColor: !props.lightMode ? \"#707073\" : {},\n                lineColor: !props.lightMode ? \"#707073\" : {},\n                minorGridLineColor: !props.lightMode ? \"#505053\" : {},\n                tickColor: !props.lightMode ? \"#707073\" : {},\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Volume\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                top: \"50%\",\n                height: \"50%\",\n                offset: 0,\n                lineWidth: 1,\n              },\n            ]\n          : props.EODSummaryType ===\n            \"OICallChg, OIPutChg, CallVolChg, PutVolChg\"\n          ? [\n              {\n                showEmpty: false,\n\n                endOnTick: true,\n                gridLineColor: !props.lightMode ? \"#707073\" : \"#e6e6e6\",\n                lineColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                minorGridLineColor: !props.lightMode ? \"#505053\" : \"#f2f2f2\",\n                tickColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"OI Chg\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                height: \"50%\",\n                lineWidth: 1,\n                resize: {\n                  enabled: true,\n                },\n                top: \"0%\",\n              },\n              {\n                showEmpty: false,\n\n                gridLineColor: !props.lightMode ? \"#707073\" : {},\n                lineColor: !props.lightMode ? \"#707073\" : {},\n                minorGridLineColor: !props.lightMode ? \"#505053\" : {},\n                tickColor: !props.lightMode ? \"#707073\" : {},\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Vol Chg\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                top: \"50%\",\n                height: \"50%\",\n                offset: 0,\n                lineWidth: 1,\n              },\n            ]\n          : props.EODSummaryType === \"FutYTDVol\"\n          ? [\n              {\n                showEmpty: false,\n\n                endOnTick: true,\n                gridLineColor: !props.lightMode ? \"#707073\" : \"#e6e6e6\",\n                lineColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                minorGridLineColor: !props.lightMode ? \"#505053\" : \"#f2f2f2\",\n                tickColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"YTD Vol\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                height: \"100%\",\n                lineWidth: 1,\n                resize: {\n                  enabled: true,\n                },\n                top: \"0%\",\n              },\n            ]\n          : props.EODSummaryType === \"FutYTDADV\"\n          ? [\n              {\n                showEmpty: false,\n\n                endOnTick: true,\n                gridLineColor: !props.lightMode ? \"#707073\" : \"#e6e6e6\",\n                lineColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                minorGridLineColor: !props.lightMode ? \"#505053\" : \"#f2f2f2\",\n                tickColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"YTD ADV\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                height: \"100%\",\n                lineWidth: 1,\n                resize: {\n                  enabled: true,\n                },\n                top: \"0%\",\n              },\n            ]\n          : props.EODSummaryType ===\n            \"CallYTDVol, CallYTDADV, CallADV, CallVol, PutYTDVol, PutYTDADV, PutADV, PutVol\"\n          ? [\n              {\n                showEmpty: false,\n\n                endOnTick: true,\n                gridLineColor: !props.lightMode ? \"#707073\" : \"#e6e6e6\",\n                lineColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                minorGridLineColor: !props.lightMode ? \"#505053\" : \"#f2f2f2\",\n                tickColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Call Vol\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                height: \"35%\",\n                lineWidth: 1,\n                resize: {\n                  enabled: true,\n                },\n                top: \"0%\",\n              },\n              {\n                showEmpty: false,\n\n                gridLineColor: !props.lightMode ? \"#707073\" : {},\n                lineColor: !props.lightMode ? \"#707073\" : {},\n                minorGridLineColor: !props.lightMode ? \"#505053\" : {},\n                tickColor: !props.lightMode ? \"#707073\" : {},\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Call ADV\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                top: \"35%\",\n                height: \"15%\",\n                offset: 0,\n                lineWidth: 1,\n              },\n              {\n                showEmpty: false,\n\n                gridLineColor: !props.lightMode ? \"#707073\" : {},\n                lineColor: !props.lightMode ? \"#707073\" : {},\n                minorGridLineColor: !props.lightMode ? \"#505053\" : {},\n                tickColor: !props.lightMode ? \"#707073\" : {},\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Put Vol\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                top: \"50%\",\n                height: \"35%\",\n                offset: 0,\n                lineWidth: 1,\n              },\n              {\n                showEmpty: false,\n\n                gridLineColor: !props.lightMode ? \"#707073\" : {},\n                lineColor: !props.lightMode ? \"#707073\" : {},\n                minorGridLineColor: !props.lightMode ? \"#505053\" : {},\n                tickColor: !props.lightMode ? \"#707073\" : {},\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Put ADV\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                top: \"85%\",\n                height: \"15%\",\n                offset: 0,\n                lineWidth: 1,\n              },\n            ]\n          : [\n              {\n                showEmpty: false,\n\n                endOnTick: true,\n                gridLineColor: !props.lightMode ? \"#707073\" : \"#e6e6e6\",\n                lineColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                minorGridLineColor: !props.lightMode ? \"#505053\" : \"#f2f2f2\",\n                tickColor: !props.lightMode ? \"#707073\" : \"#ccd6eb\",\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Call Vol\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                height: \"35%\",\n                lineWidth: 1,\n                resize: {\n                  enabled: true,\n                },\n                top: \"0%\",\n              },\n              {\n                showEmpty: false,\n\n                gridLineColor: !props.lightMode ? \"#707073\" : {},\n                lineColor: !props.lightMode ? \"#707073\" : {},\n                minorGridLineColor: !props.lightMode ? \"#505053\" : {},\n                tickColor: !props.lightMode ? \"#707073\" : {},\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Call ADV\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                top: \"35%\",\n                height: \"15%\",\n                offset: 0,\n                lineWidth: 1,\n              },\n              {\n                showEmpty: false,\n\n                gridLineColor: !props.lightMode ? \"#707073\" : {},\n                lineColor: !props.lightMode ? \"#707073\" : {},\n                minorGridLineColor: !props.lightMode ? \"#505053\" : {},\n                tickColor: !props.lightMode ? \"#707073\" : {},\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Put Vol\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                top: \"50%\",\n                height: \"35%\",\n                offset: 0,\n                lineWidth: 1,\n              },\n              {\n                showEmpty: false,\n\n                gridLineColor: !props.lightMode ? \"#707073\" : {},\n                lineColor: !props.lightMode ? \"#707073\" : {},\n                minorGridLineColor: !props.lightMode ? \"#505053\" : {},\n                tickColor: !props.lightMode ? \"#707073\" : {},\n                crosshair: {\n                  snap: false,\n                  label: {\n                    padding: 4,\n                  },\n                },\n                labels: {\n                  align: \"right\",\n                  x: -3,\n                  style: {\n                    color: !props.lightMode ? \"#E0E0E3\" : {},\n                  },\n                },\n                title: {\n                  text: \"Put ADV\",\n                  style: {\n                    color: !props.lightMode ? \"#A0A0A3\" : {},\n                  },\n                },\n                top: \"85%\",\n                height: \"15%\",\n                offset: 0,\n                lineWidth: 1,\n              },\n            ],\n\n      tooltip: {\n        enabled: data.includes(\"noneAvail\") ? false : true,\n\n        shared: true,\n\n        backgroundColor: !props.lightMode\n          ? \"rgb(95,95,97,0.75)\"\n          : \"rgb(255,255,255,0.75)\",\n        style: {\n          color: !props.lightMode ? \"#F0F0F0\" : {},\n        },\n        split: true,\n        shape: \"square\",\n        borderWidth: 0,\n        shadow: false,\n        padding: 3,\n        useHTML: true,\n        xDateFormat:\n          props.EODSummaryType === \"FutYTDVol\" ||\n          props.EODSummaryType === \"FutYTDADV\"\n            ? \"%b\"\n            : \"%m/%Y\",\n\n        positioner:\n          props.EODSummaryType === \"FutADV & FutOpnInt\"\n            ? undefined\n            : props.EODSummaryType === \"CallADV, PutADV, FutADV\"\n            ? function (width, height, point) {\n                let chart = this.chart;\n                let position;\n                if (point.isHeader) {\n                  position = {\n                    x: Math.max(\n                      chart.plotLeft,\n                      Math.min(\n                        point.plotX + chart.plotLeft - width / 2,\n                        chart.chartWidth - width - chart.marginRight\n                      )\n                    ),\n                    y: point.plotY,\n                  };\n                } else if (\n                  point.series.name === \"Call ADV\" ||\n                  point.series.name === \"Put ADV\"\n                ) {\n                  position = {\n                    x: point.series.chart.plotLeft,\n                    y: 0,\n                  };\n                } else if (point.series.name === \"Fut ADV\") {\n                  position = {\n                    x: point.series.chart.plotLeft,\n                    y: chart.yAxis[1].top - chart.yAxis[1].height + 65,\n                  };\n                } else {\n                  return {\n                    x: Math.max(\n                      chart.plotLeft,\n                      Math.min(\n                        point.plotX + chart.plotLeft - width / 2,\n                        chart.chartWidth - width - chart.marginRight\n                      )\n                    ),\n                    y: point.plotY - height * 1.5,\n                  };\n                }\n                return position;\n              }\n            : props.EODSummaryType ===\n              \"CallOpenInt, PutOpenInt, CallVol, PutVol\"\n            ? function (width, height, point) {\n                let chart = this.chart;\n                let position;\n                if (point.isHeader) {\n                  position = {\n                    x: Math.max(\n                      chart.plotLeft,\n                      Math.min(\n                        point.plotX + chart.plotLeft - width / 2,\n                        chart.chartWidth - width - chart.marginRight\n                      )\n                    ),\n                    y: point.plotY,\n                  };\n                } else if (\n                  point.series.name === \"Call OI\" ||\n                  point.series.name === \"Put OI\"\n                ) {\n                  position = {\n                    x: point.series.chart.plotLeft,\n                    y: 0,\n                  };\n                } else if (\n                  point.series.name === \"Call Vol\" ||\n                  point.series.name === \"Put Vol\"\n                ) {\n                  position = {\n                    x: point.series.chart.plotLeft,\n                    y: chart.yAxis[1].top - 50,\n                  };\n                } else {\n                  return {\n                    x: Math.max(\n                      chart.plotLeft,\n                      Math.min(\n                        point.plotX + chart.plotLeft - width / 2,\n                        chart.chartWidth - width - chart.marginRight\n                      )\n                    ),\n                    y: point.plotY - height * 1.5,\n                  };\n                }\n                return position;\n              }\n            : props.EODSummaryType ===\n              \"OICallChg, OIPutChg, CallVolChg, PutVolChg\"\n            ? function (width, height, point) {\n                let chart = this.chart;\n                let position;\n                if (point.isHeader) {\n                  position = {\n                    x: Math.max(\n                      chart.plotLeft,\n                      Math.min(\n                        point.plotX + chart.plotLeft - width / 2,\n                        chart.chartWidth - width - chart.marginRight\n                      )\n                    ),\n                    y: point.plotY,\n                  };\n                } else if (\n                  point.series.name === \"Call OI Chg\" ||\n                  point.series.name === \"Put OI Chg\"\n                ) {\n                  position = {\n                    x: point.series.chart.plotLeft,\n                    y: 0,\n                  };\n                } else if (\n                  point.series.name === \"Call Vol Chg\" ||\n                  point.series.name === \"Put Vol Chg\"\n                ) {\n                  position = {\n                    x: point.series.chart.plotLeft,\n                    y: chart.yAxis[1].top - 50,\n                  };\n                } else {\n                  return {\n                    x: Math.max(\n                      chart.plotLeft,\n                      Math.min(\n                        point.plotX + chart.plotLeft - width / 2,\n                        chart.chartWidth - width - chart.marginRight\n                      )\n                    ),\n                    y: point.plotY - height * 1.5,\n                  };\n                }\n                return position;\n              }\n            : props.EODSummaryType === \"FutYTDVol\"\n            ? undefined\n            : props.EODSummaryType === \"FutYTDADV\"\n            ? undefined\n            : props.EODSummaryType ===\n              \"CallYTDVol, CallYTDADV, CallADV, CallVol, PutYTDVol, PutYTDADV, PutADV, PutVol\"\n            ? function (width, height, point) {\n                let chart = this.chart;\n                let position;\n                if (point.isHeader) {\n                  position = {\n                    x: Math.max(\n                      chart.plotLeft,\n                      Math.min(\n                        point.plotX + chart.plotLeft - width / 2,\n                        chart.chartWidth - width - chart.marginRight\n                      )\n                    ),\n                    y: point.plotY,\n                  };\n                } else if (\n                  point.series.name === \"Call Vol\" ||\n                  point.series.name === \"Call YTD Vol\"\n                ) {\n                  position = {\n                    x: point.series.chart.plotLeft,\n                    y: 0,\n                  };\n                } else if (\n                  point.series.name === \"Call YTD ADV\" ||\n                  point.series.name === \"Call ADV\"\n                ) {\n                  position = {\n                    x: point.series.chart.plotLeft,\n                    y: chart.yAxis[1].top - 50,\n                  };\n                } else if (\n                  point.series.name === \"Put Vol\" ||\n                  point.series.name === \"Put YTD Vol\"\n                ) {\n                  position = {\n                    x: point.series.chart.plotLeft,\n                    y: chart.yAxis[2].top - 25,\n                  };\n                } else if (\n                  point.series.name === \"Put YTD ADV\" ||\n                  point.series.name === \"Put ADV\"\n                ) {\n                  position = {\n                    x: point.series.chart.plotLeft,\n                    y: chart.yAxis[3].top - 50,\n                  };\n                } else {\n                  return {\n                    x: Math.max(\n                      chart.plotLeft,\n                      Math.min(\n                        point.plotX + chart.plotLeft - width / 2,\n                        chart.chartWidth - width - chart.marginRight\n                      )\n                    ),\n                    y: point.plotY - height * 1.5,\n                  };\n                }\n                return position;\n              }\n            : undefined,\n\n        //   let chart = this.chart;\n        //   let position;\n        //   if (point.isHeader) {\n        //     position = {\n        //       x: Math.max(\n        //         chart.plotLeft,\n        //         Math.min(\n        //           point.plotX + chart.plotLeft - width / 2,\n        //           chart.chartWidth - width - chart.marginRight\n        //         )\n        //       ),\n        //       y: point.plotY,\n        //     };\n        //   } else if (\n        //     point.series.name === \"Future Volume\" ||\n        //     point.series.name === \"Future Volume Chg\" ||\n        //     point.series.name === \"Call Volume\" ||\n        //     point.series.name === \"Put Volume\" ||\n        //     point.series.name === \"Call Volume Chg\" ||\n        //     point.series.name === \"Put Volume Chg\"\n        //   ) {\n        //     position = {\n        //       x: point.series.chart.plotLeft,\n        //       y: 0,\n        //     };\n        //   } else if (\n        //     point.series.name === \"Future OI\" ||\n        //     point.series.name === \"Future OI Chg\" ||\n        //     point.series.name === \"Call OI\" ||\n        //     point.series.name === \"Put OI\" ||\n        //     point.series.name === \"Call OI Chg\" ||\n        //     point.series.name === \"Put OI Chg\"\n        //   ) {\n        //     position = {\n        //       x: point.series.chart.plotLeft,\n        //       y: chart.yAxis[2].top - chart.yAxis[2].height + 48,\n        //     };\n        //   } else {\n        //     return {\n        //       x: Math.max(\n        //         chart.plotLeft,\n        //         Math.min(\n        //           point.plotX + chart.plotLeft - width / 2,\n        //           chart.chartWidth - width - chart.marginRight\n        //         )\n        //       ),\n        //       y: point.plotY - height * 1.5,\n        //     };\n        //   }\n\n        //   return position;\n        // },\n      },\n      // corresponding indexes in data array:\n      // lM,\n      // YR,\n      // FutVol, 2\n      // FutVolChg, 3\n      // FutADV,4\n      // FutOpnInt,5\n      // OIFutChg,6\n      // CallOpenInt7\n      // ,PutOpenInt,8\n      // OICallChg,9\n      // OIPutChg,10\n      // CallVolChg,11\n      // PutVolChg,12\n      // CallVol,13\n      // CallADV,14\n      // PutVol 15\n      // ,PutADV,16\n      // TotVol,17\n      // TotADV,18\n      // FutYTDVol 19\n      // ,FutYTDADV,20\n      // CallYTDVol 21\n      // ,CallYTDADV,22\n      // PutYTDVol 23\n      // ,PutYTDADV 24\n\n      series:\n        props.EODSummaryType === \"FutADV & FutOpnInt\"\n          ? [\n              {\n                type: \"column\",\n                name: \"Future ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][5]])\n                  : [0, 0, 0, 0, 0],\n\n                color: props.lightMode ? undefined : \"#4a68b5\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n\n              {\n                type: \"column\",\n                name: \"Future OI\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][1]])\n                  : [0, 0, 0, 0, 0],\n                yAxis: 1,\n\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.1\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n            ]\n          : props.EODSummaryType === \"CallADV, PutADV, FutADV\"\n          ? [\n              {\n                type: \"column\",\n                name: \"Call ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][15]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#7A9FCC\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                yAxis: 0,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"column\",\n                name: \"Put ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][17]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#A6861E\",\n                yAxis: 0,\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"column\",\n                name: \"Fut ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][5]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#4E5A85\",\n                borderColor: \"white\",\n                borderWidth: \"0.5\",\n                yAxis: 1,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n            ]\n          : props.EODSummaryType === \"CallOpenInt, PutOpenInt, CallVol, PutVol\"\n          ? [\n              {\n                type: \"column\",\n                name: \"Call OI\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][8]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#7A9FCC\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                yAxis: 0,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"column\",\n                name: \"Put OI\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][9]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#A48308\",\n                yAxis: 0,\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"column\",\n                name: \"Call Vol\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][14]])\n                  : [0, 0, 0, 0, 0],\n                color: \"rgb(137,188,233)\",\n                borderColor: \"white\",\n                borderWidth: \"0.5\",\n                yAxis: 1,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"column\",\n                name: \"Put Vol\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][16]])\n                  : [0, 0, 0, 0, 0],\n                yAxis: 1,\n\n                color: \"#A6861E\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n            ]\n          : props.EODSummaryType ===\n            \"OICallChg, OIPutChg, CallVolChg, PutVolChg\"\n          ? [\n              {\n                type: \"line\",\n                name: \"Call OI Chg\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][10]])\n                  : [0, 0, 0, 0, 0],\n                color: \"rgb(137,188,233)\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                yAxis: 0,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"line\",\n                name: \"Put OI Chg\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][11]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#A48308\",\n                yAxis: 0,\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"line\",\n                name: \"Call Vol Chg\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][12]])\n                  : [0, 0, 0, 0, 0],\n                color: \"rgb(137,188,233)\",\n                borderColor: \"white\",\n                borderWidth: \"0.5\",\n                yAxis: 1,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"line\",\n                name: \"Put Vol Chg\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][13]])\n                  : [0, 0, 0, 0, 0],\n                yAxis: 1,\n\n                color: \"#A6861E\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n            ]\n          : props.EODSummaryType === \"FutYTDVol\"\n          ? data\n              .reduce((result, month, i) => {\n                if (i === 0) {\n                  result.push([]);\n                  result[result.length - 1].push(month);\n                } else if (\n                  new Date(month[0]).toString().slice(11, 15) !==\n                  new Date(data[i - 1][0]).toString().slice(11, 15)\n                ) {\n                  //comparing years to determine series groupings\n                  result.push([]);\n                  result[result.length - 1].push(month);\n                } else {\n                  result[result.length - 1].push(month);\n                }\n                return result;\n              }, [])\n              .map((year, i) => {\n                return {\n                  type: \"line\",\n                  name: `${new Date(year[0][0])\n                    .toString()\n                    .slice(11, 15)} YTD Vol`,\n                  data: year.map((month, i) => {\n                    const xDate = new Date(month[0]);\n                    xDate.setFullYear(1970);\n                    return [Date.parse(xDate), month[6]];\n                  }),\n                  yAxis: 0,\n                  marker: {\n                    enabled: true,\n                    radius: 2,\n                  },\n                  color: `hsl(${\n                    210 + i * 20 < 360\n                      ? 210 + i * 20\n                      : 210 + i * 20 > 360\n                      ? 210 - i * 20\n                      : 200\n                  }, 72%, ${\n                    210 + i * 20 < 360 || 210 + i * 20 > 360 ? 57 - i * 3 : 57\n                  }%`,\n                  borderColor: \"white\",\n                  borderWidth: props.lightMode ? undefined : \"0.5\",\n                  borderRadius: props.lightMode ? \"0\" : \"1\",\n                  dataGrouping: {\n                    enabled: groupingUnits,\n                  },\n                };\n              })\n          : props.EODSummaryType === \"FutYTDADV\"\n          ? data\n              .reduce((result, month, i) => {\n                if (i === 0) {\n                  result.push([]);\n                  result[result.length - 1].push(month);\n                } else if (\n                  new Date(month[0]).toString().slice(11, 15) !==\n                  new Date(data[i - 1][0]).toString().slice(11, 15)\n                ) {\n                  //comparing years to determine series groupings\n                  result.push([]);\n                  result[result.length - 1].push(month);\n                } else {\n                  result[result.length - 1].push(month);\n                }\n                return result;\n              }, [])\n              .map((year, i) => {\n                return {\n                  type: \"line\",\n                  name: `${new Date(year[0][0])\n                    .toString()\n                    .slice(11, 15)} YTD ADV`,\n                  data: year.map((month, i) => {\n                    const xDate = new Date(month[0]);\n                    xDate.setFullYear(1970);\n                    return [Date.parse(xDate), month[7]];\n                  }),\n                  yAxis: 0,\n                  marker: {\n                    enabled: true,\n                    radius: 2,\n                  },\n                  color: `hsl(${\n                    210 + i * 20 < 360\n                      ? 210 + i * 20\n                      : 210 + i * 20 > 360\n                      ? 210 - i * 20\n                      : 200\n                  }, 72%, ${\n                    210 + i * 20 < 360 || 210 + i * 20 > 360 ? 57 - i * 3 : 57\n                  }%`,\n                  borderColor: \"white\",\n                  borderWidth: props.lightMode ? undefined : \"0.5\",\n                  borderRadius: props.lightMode ? \"0\" : \"1\",\n                  dataGrouping: {\n                    enabled: groupingUnits,\n                  },\n                };\n              })\n          : props.EODSummaryType ===\n            \"CallYTDVol, CallYTDADV, CallADV, CallVol, PutYTDVol, PutYTDADV, PutADV, PutVol\"\n          ? [\n              {\n                type: \"column\",\n                name: \"Call Vol\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][14]])\n                  : [0, 0, 0, 0, 0],\n                color: \"rgb(137,188,233)\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                yAxis: 0,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"column\",\n                name: \"Call YTD Vol\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][18]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#5B81CC\",\n                yAxis: 0,\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"spline\",\n                name: \"Call ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][15]])\n                  : [0, 0, 0, 0, 0],\n                yAxis: 1,\n\n                color: \"#8F213B\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"spline\",\n                name: \"Call YTD ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][19]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#525DA3\",\n                borderColor: \"white\",\n                borderWidth: \"0.5\",\n                yAxis: 1,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n\n              {\n                type: \"column\",\n                name: \"Put Vol\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][16]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#E8BC57\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                yAxis: 2,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"column\",\n                name: \"Put YTD Vol\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][20]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#997C1C\",\n                yAxis: 2,\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"spline\",\n                name: \"Put ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][17]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#8F213B\",\n\n                borderColor: \"white\",\n                borderWidth: \"0.5\",\n                yAxis: 3,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"spline\",\n                name: \"Put YTD ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][21]])\n                  : [0, 0, 0, 0, 0],\n                yAxis: 3,\n                color: \"#525DA3\",\n\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n            ]\n          : [\n              {\n                type: \"column\",\n                name: \"Call Vol\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][14]])\n                  : [0, 0, 0, 0, 0],\n                color: \"rgb(137,188,233)\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                yAxis: 0,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"column\",\n                name: \"Call YTD Vol\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][18]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#5B81CC\",\n                yAxis: 0,\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"spline\",\n                name: \"Call ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][15]])\n                  : [0, 0, 0, 0, 0],\n                yAxis: 1,\n\n                color: \"#8F213B\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"spline\",\n                name: \"Call YTD ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][19]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#525DA3\",\n                borderColor: \"white\",\n                borderWidth: \"0.5\",\n                yAxis: 1,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n\n              {\n                type: \"column\",\n                name: \"Put Vol\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][16]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#E8BC57\",\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                yAxis: 2,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"column\",\n                name: \"Put YTD Vol\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][20]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#997C1C\",\n                yAxis: 2,\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"spline\",\n                name: \"Put ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][17]])\n                  : [0, 0, 0, 0, 0],\n                color: \"#8F213B\",\n\n                borderColor: \"white\",\n                borderWidth: \"0.5\",\n                yAxis: 3,\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n              {\n                type: \"spline\",\n                name: \"Put YTD ADV\",\n                data: !data.includes(\"noneAvail\")\n                  ? data.map((d, i) => [data[i][0], data[i][21]])\n                  : [0, 0, 0, 0, 0],\n                yAxis: 3,\n                color: \"#525DA3\",\n\n                borderColor: \"white\",\n                borderWidth: props.lightMode ? undefined : \"0.5\",\n                borderRadius: props.lightMode ? \"0\" : \"1\",\n                dataGrouping: {\n                  enabled: groupingUnits,\n                },\n              },\n            ],\n      exporting: {\n        buttons: {\n          contextButton: {\n            menuItems: [\n              \"viewFullscreen\",\n              \"printChart\",\n              \"separator\",\n              \"downloadPNG\",\n              \"downloadJPEG\",\n              \"downloadPDF\",\n              \"downloadSVG\",\n              // eslint-disable-next-line no-restricted-globals\n              location.search.includes(\"qs=1\") ? \"separator\" : \"\",\n              // eslint-disable-next-line no-restricted-globals\n              location.search.includes(\"qs=1\") ? \"downloadCSV\" : \"\",\n              // eslint-disable-next-line no-restricted-globals\n              location.search.includes(\"qs=1\") ? \"downloadXLS\" : \"\",\n              \"separator\",\n              \"viewData\",\n            ],\n          },\n        },\n        menuItemDefinitions: {\n          viewFullscreen: {\n            onclick: function () {\n              this.fullscreen.toggle();\n            },\n          },\n          viewData: {\n            onclick: function () {\n              if (\n                document.getElementsByClassName(\"highcharts-data-table\")[0] &&\n                document.getElementsByClassName(\"highcharts-data-table\")[0]\n                  .style.display !== \"none\"\n              ) {\n                document.getElementsByClassName(\n                  \"highcharts-data-table\"\n                )[0].style.display = \"none\";\n              } else {\n                try {\n                  this.viewData.text = \"Hide data table\";\n                } catch {}\n                try {\n                  this.viewData();\n                } catch {}\n                document.getElementsByClassName(\n                  \"highcharts-data-table\"\n                )[0].style.display = \"\";\n              }\n            },\n            sourceWidth: 1000,\n          },\n        },\n        sourceWidth: 1000,\n      },\n      credits: {\n        enabled: false,\n      },\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options, data, chartRef.current, isMobile]);\n\n  useEffect(() => {\n    setData([]);\n    try {\n      loadSpinnerRef.current.style.animationFillMode = \"forwards\";\n      loadSpinnerRef.current.style.visibility = \"visible\";\n      loadSpinnerRef.current.style.opacity = \"1\";\n      containerRef.current.style.opacity = data.includes(\"noneAvail\")\n        ? \"0.6\"\n        : \"0.9\";\n    } catch {}\n\n    axios(\n      process.env.NODE_ENV === \"production\"\n        ? `https://quikoptions.info/api/EODSummaryData?EODSummaryDataProdSym=${\"OZC\"}`\n        : `https://quikoptions.info/api/EODSummaryData?EODSummaryDataProdSym=${\"OZC\"}`\n    ).then((response) => {\n      console.log(response.data);\n\n      try {\n        containerRef.current.style.opacity = data.includes(\"noneAvail\")\n          ? \"0.6\"\n          : \"1\";\n\n        loadSpinnerRef.current.style.visibility = \"hidden\";\n        loadSpinnerRef.current.style.opacity = \"0\";\n\n        if (response.data.includes(\"AVAIL\") || response.data.length === 0) {\n          console.log(\"!\");\n          setTimeout(() => setData([0, \"noneAvail\"]), 0);\n          noneAvailRef.current.style.animationFillMode = \"forwards\";\n          noneAvailRef.current.style.visibility = \"visible\";\n          noneAvailRef.current.style.opacity = \"0.75\";\n          containerRef.current.style.opacity = \"0.6\";\n        } else {\n          try {\n            containerRef.current.style.opacity = \"0.9\";\n          } catch {}\n\n          setData(\n            response.data.map(\n              ({\n                YM,\n                FutOpnInt,\n                OIFutChg,\n                FutVolChg,\n                FutVol,\n                FutADV,\n                FutYTDVol,\n                FutYTDADV,\n                CallOpenInt,\n                PutOpenInt,\n                OICallChg,\n                OIPutChg,\n                CallVolChg,\n                PutVolChg,\n                CallVol,\n                CallADV,\n                PutVol,\n                PutADV,\n                CallYTDVol,\n                CallYTDADV,\n                PutYTDVol,\n                PutYTDADV,\n              }) => [\n                Date.parse(`${YM.slice(-2)}/01/${YM.slice(0, 4)}`),\n                FutOpnInt === \"NaN\" || isNaN(FutOpnInt)\n                  ? null\n                  : parseFloat(FutOpnInt),\n                OIFutChg === \"NaN\" || isNaN(OIFutChg)\n                  ? null\n                  : parseFloat(OIFutChg),\n                FutVolChg === \"NaN\" || isNaN(FutVolChg)\n                  ? null\n                  : parseFloat(FutVolChg),\n                FutVol === \"NaN\" || isNaN(FutVol) ? null : parseFloat(FutVol),\n                FutADV === \"NaN\" || isNaN(FutADV) ? null : parseFloat(FutADV), //cv5\n                FutYTDVol === \"NaN\" || isNaN(FutYTDVol)\n                  ? null\n                  : parseFloat(FutYTDVol), //pv6\n                FutYTDADV === \"NaN\" || isNaN(FutYTDADV) //cvc7\n                  ? null\n                  : parseFloat(FutYTDADV),\n                CallOpenInt === \"NaN\" || isNaN(CallOpenInt) //pvc8\n                  ? null\n                  : parseFloat(CallOpenInt),\n                PutOpenInt === \"NaN\" || isNaN(PutOpenInt)\n                  ? null\n                  : parseFloat(PutOpenInt), //coi9\n                OICallChg === \"NaN\" || isNaN(OICallChg)\n                  ? null\n                  : parseFloat(OICallChg), //poi10\n                OIPutChg === \"NaN\" || isNaN(OIPutChg) //coic11\n                  ? null\n                  : parseFloat(OIPutChg),\n                CallVolChg === \"NaN\" || isNaN(CallVolChg) //poic12\n                  ? null\n                  : parseFloat(CallVolChg),\n                PutVolChg === \"NaN\" || isNaN(PutVolChg) //poic12\n                  ? null\n                  : parseFloat(PutVolChg),\n                CallVol === \"NaN\" || isNaN(CallVol) //poic12\n                  ? null\n                  : parseFloat(CallVol),\n                CallADV === \"NaN\" || isNaN(CallADV) //poic12\n                  ? null\n                  : parseFloat(CallADV),\n                PutVol === \"NaN\" || isNaN(PutVol) //poic12\n                  ? null\n                  : parseFloat(PutVol),\n                PutADV === \"NaN\" || isNaN(PutADV) //poic12\n                  ? null\n                  : parseFloat(PutADV),\n                CallYTDVol === \"NaN\" || isNaN(CallYTDVol) //poic12\n                  ? null\n                  : parseFloat(CallYTDVol),\n                CallYTDADV === \"NaN\" || isNaN(CallYTDADV) //poic12\n                  ? null\n                  : parseFloat(CallYTDADV),\n                PutYTDVol === \"NaN\" || isNaN(PutYTDVol) //poic12\n                  ? null\n                  : parseFloat(PutYTDVol),\n                PutYTDADV === \"NaN\" || isNaN(PutYTDADV) //poic12\n                  ? null\n                  : parseFloat(PutYTDADV),\n                // OpnInt === \"NaN\" || isNaN(OpnInt) ? null : parseFloat(OpnInt),\n                // Volume === \"NaN\" || isNaN(Volume) ? null : parseFloat(Volume),\n              ]\n            )\n          );\n        }\n        setGroupingUnits([\n          [\n            \"week\", // unit name\n            [1], // allowed multiples\n          ],\n          [\"month\", [1, 2, 3, 4, 6]],\n        ]);\n        console.log(\"Setdata\");\n        setOptions();\n      } catch {\n        // console.log(data);\n      }\n      try {\n        //make sure scroll position of expiry symbol buttons (top right) goes back to 0\n        expButtonsRef.current.__forceSmoothScrollPolyfill__ = true;\n        expButtonsRef.current.scrollTo(0, 0);\n      } catch {}\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.prodName]);\n\n  return (\n    <div style={{ background: !props.lightMode && \"rgb(47,54.5,70.5)\" }}>\n      {props.symSwitchEnabled ? (\n        <div\n          style={{\n            // position: \"absolute\",\n            right: \"0%\",\n            // transform: \"translate(0,-100%)\",\n            zIndex: \"2\",\n            fontSize: \"0.9em\",\n            color: \"white\",\n            textAlign: \"center\",\n            width: \"100%\",\n\n            // window.innerWidth < 1500 ? \"1390px\" : window.innerWidth - 50,\n            whiteSpace: \"nowrap\",\n            overflow: \"visible\",\n            // right:\"100%\",\n            display: \"inline-flex\",\n          }}\n        >\n          <span\n            style={{\n              fontSize: \"9px\",\n              marginLeft: \"0.5rem\",\n              marginRight: \"0.5rem\",\n              marginBottom: \"0\",\n              padding: \"0\",\n              height: \"fit-content\",\n              transform: \"translate(0px,0.2rem)\",\n              borderRadius: \"2px\",\n              background: \"blue\",\n              textAlign: \"center\",\n              display: props.symButtonStripLabel === undefined && \"none\",\n              backgroundColor: props.lightMode ? \"\" : \"rgba(99, 111, 135,0.8)\",\n              color: props.lightMode ? \"black\" : \"white\",\n            }}\n          >\n            <>&nbsp;</>\n            {`${props.symButtonStripLabel} Symbols:`}\n            <>&nbsp;</>\n          </span>\n          <div\n            className=\"expButtons\"\n            id=\"expButtons\"\n            style={{\n              marginLeft: \"auto\",\n              scrollbarWidth: \"none\",\n              // background: `linear-gradient(to right, transparent 29vw, ${\n              //   props.lightMode\n              //     ? \"rgb(255, 255, 255)\"\n              //     : \"rgba(255,255,255,0.4)\"\n              // })`,\n              overflow: \"scroll\",\n              width: \"100%\",\n              textAlign: \"right\",\n            }}\n          >\n            <div\n              ref={expButtonsRef}\n              className=\"expButtons\"\n              id=\"expButtons\"\n              style={{\n                scrollBehavior: \"smooth\",\n                scrollbarWidth: \"none\",\n                marginLeft: \"auto\",\n                background: `linear-gradient(to right, transparent 95%, ${\n                  props.lightMode\n                    ? \"rgb(255, 255, 255)\"\n                    : \"rgba(255,255,255,0.4)\"\n                })`,\n                overflow: \"scroll\",\n                width: \"100%\",\n                textAlign: \"left\",\n              }}\n            >\n              {/* <ExpiryFutSymbolButton\n                lightMode={props.lightMode}\n                onClick={undefined}\n                expSymbol={props.prodCode}\n                currentlySelected={true}\n              /> */}\n              {props.marketData\n                .filter((symDetails) => symDetails.ProdName !== props.prodName)\n                .map((symDetails) => {\n                  // console.log(symDetails);\n                  return (\n                    // <ExpiryFutSymbolButton\n                    //   lightMode={props.lightMode}\n                    //   onClick={() => {\n                    //     props.setGraphProps({\n                    //       EODSummaryProdName: symDetails.ProdName,\n                    //       EODSummaryProdCode: ProdNameToSym(\n                    //         symDetails.ProdName,\n                    //         false,\n                    //         true\n                    //       ),\n                    //       // symDetails.ProdName.substring(\n\n                    //       //   symDetails.ProdName.indexOf(\"(\") + 1,\n                    //       //   symDetails.ProdName.indexOf(\")\")\n                    //       // )\n                    //       EODSummaryType: props.EODSummaryType,\n                    //     });\n                    //   }}\n                    //   expSymbol={\n                    //     ProdNameToSym(symDetails.ProdName, false, true)\n                    //     // symDetails.ProdName.split(\"(\")[1].substring(\n                    //     // 0,\n                    //     // symDetails.ProdName.split(\"(\")[1].indexOf(\")\")\n                    //     // )\n                    //   }\n                    // />\n                    <></>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n      {data.includes(\"noneAvail\") ? (\n        <div\n          ref={noneAvailRef}\n          style={{\n            transition: \"all 0.25s ease\",\n            position: \"absolute\",\n            fontSize: \"1vw\",\n            left: \"45%\",\n            bottom: \"50%\",\n            zIndex: \"100\",\n            transform: \"scale(3.5,3.5)\",\n            display: \"table-row-group\",\n\n            color: props.lightMode ? \"black\" : \"rgba(176, 192, 209,0.3)\",\n          }}\n        >\n          <div\n            style={{\n              transform: \"translate(112.5%,-40%) scale(2.5,2.5)\",\n              opacity: \"0.55\",\n            }}\n          >\n            <ExclamationTriangle sz=\"lg\" />\n          </div>\n          Plot Unavailable\n        </div>\n      ) : (\n        <>\n          <div\n            ref={loadSpinnerRef}\n            style={{\n              transition: \"all 0.25s ease\",\n              position: \"absolute\",\n              left: \"50%\",\n              bottom: \"50%\",\n              zIndex: \"100\",\n              transform: \"scale(3.5,3.5)\",\n            }}\n          >\n            <Spinner\n              animation=\"border\"\n              variant={props.lightMode ? \"secondary\" : \"light\"}\n            />\n          </div>\n        </>\n      )}\n      <div\n        ref={containerRef}\n        highcharts={Highcharts}\n        constructorType={\"stockChart\"}\n        updateArgs={[true, true, true]}\n        options={options}\n        allowChartUpdate={true}\n        immutable={false}\n        callback={useEffect}\n      />\n    </div>\n  );\n};\n\nexport default EODSummaryGraph;\n",{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":5,"column":17,"nodeType":"50","messageId":"51","endLine":5,"endColumn":26},{"ruleId":"48","severity":1,"message":"53","line":5,"column":28,"nodeType":"50","messageId":"51","endLine":5,"endColumn":35},{"ruleId":"48","severity":1,"message":"54","line":5,"column":37,"nodeType":"50","messageId":"51","endLine":5,"endColumn":43},{"ruleId":"48","severity":1,"message":"55","line":6,"column":10,"nodeType":"50","messageId":"51","endLine":6,"endColumn":18},{"ruleId":"48","severity":1,"message":"56","line":10,"column":3,"nodeType":"50","messageId":"51","endLine":10,"endColumn":9},{"ruleId":"48","severity":1,"message":"57","line":11,"column":3,"nodeType":"50","messageId":"51","endLine":11,"endColumn":11},{"ruleId":"48","severity":1,"message":"58","line":13,"column":3,"nodeType":"50","messageId":"51","endLine":13,"endColumn":14},{"ruleId":"48","severity":1,"message":"59","line":14,"column":3,"nodeType":"50","messageId":"51","endLine":14,"endColumn":13},{"ruleId":"48","severity":1,"message":"60","line":17,"column":10,"nodeType":"50","messageId":"51","endLine":17,"endColumn":25},{"ruleId":"48","severity":1,"message":"61","line":17,"column":27,"nodeType":"50","messageId":"51","endLine":17,"endColumn":40},{"ruleId":"48","severity":1,"message":"62","line":19,"column":10,"nodeType":"50","messageId":"51","endLine":19,"endColumn":23},{"ruleId":"48","severity":1,"message":"63","line":20,"column":10,"nodeType":"50","messageId":"51","endLine":20,"endColumn":16},{"ruleId":"48","severity":1,"message":"64","line":22,"column":8,"nodeType":"50","messageId":"51","endLine":22,"endColumn":13},{"ruleId":"48","severity":1,"message":"65","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":27},{"ruleId":"48","severity":1,"message":"66","line":14,"column":8,"nodeType":"50","messageId":"51","endLine":14,"endColumn":22},{"ruleId":"48","severity":1,"message":"67","line":15,"column":10,"nodeType":"50","messageId":"51","endLine":15,"endColumn":21},{"ruleId":"48","severity":1,"message":"68","line":15,"column":23,"nodeType":"50","messageId":"51","endLine":15,"endColumn":31},{"ruleId":"69","severity":2,"message":"70","line":2052,"column":15,"nodeType":"50","messageId":"71","endLine":2052,"endColumn":23,"suppressions":"72"},{"ruleId":"69","severity":2,"message":"70","line":2054,"column":15,"nodeType":"50","messageId":"71","endLine":2054,"endColumn":23,"suppressions":"73"},{"ruleId":"69","severity":2,"message":"70","line":2056,"column":15,"nodeType":"50","messageId":"71","endLine":2056,"endColumn":23,"suppressions":"74"},{"ruleId":"75","severity":1,"message":"76","line":2101,"column":6,"nodeType":"77","endLine":2101,"endColumn":49,"suggestions":"78","suppressions":"79"},{"ruleId":"75","severity":1,"message":"80","line":2253,"column":6,"nodeType":"77","endLine":2253,"endColumn":22,"suggestions":"81","suppressions":"82"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'TransitionGroup' is defined but never used.","'CSSTransition' is defined but never used.","'useMediaQuery' is defined but never used.","'Helmet' is defined but never used.","'axios' is defined but never used.","'useReducer' is defined but never used.","'DropdownButton' is defined but never used.","'NavDropdown' is defined but never used.","'Dropdown' is defined but never used.","no-restricted-globals","Unexpected use of 'location'.","defaultMessage",["83"],["84"],["85"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'groupingUnits', 'props.EODSummaryType', 'props.lightMode', and 'props.prodName'. Either include them or remove the dependency array. Mutable values like 'chartRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["86"],["87"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["88"],["89"],{"kind":"90","justification":"91"},{"kind":"90","justification":"91"},{"kind":"90","justification":"91"},{"desc":"92","fix":"93"},{"kind":"90","justification":"91"},{"desc":"94","fix":"95"},{"kind":"90","justification":"91"},"directive","","Update the dependencies array to be: [options, data, isMobile, props.lightMode, props.EODSummaryType, props.prodName, groupingUnits]",{"range":"96","text":"97"},"Update the dependencies array to be: [data, props.prodName]",{"range":"98","text":"99"},[69133,69176],"[options, data, isMobile, props.lightMode, props.EODSummaryType, props.prodName, groupingUnits]",[74730,74746],"[data, props.prodName]"]