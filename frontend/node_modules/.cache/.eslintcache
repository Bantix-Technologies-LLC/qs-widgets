[{"/Users/sussman/qs-widgets/frontend/src/index.js":"1","/Users/sussman/qs-widgets/frontend/src/reportWebVitals.js":"2","/Users/sussman/qs-widgets/frontend/src/App.js":"3","/Users/sussman/qs-widgets/frontend/src/EventConGraph.js":"4"},{"size":535,"mtime":1682460934309,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1682460934310,"results":"7","hashOfConfig":"6"},{"size":1036,"mtime":1682619114793,"results":"8","hashOfConfig":"6"},{"size":22437,"mtime":1682961226926,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"3t7zg1",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/sussman/qs-widgets/frontend/src/index.js",[],[],[],"/Users/sussman/qs-widgets/frontend/src/reportWebVitals.js",[],[],"/Users/sussman/qs-widgets/frontend/src/App.js",["25","26","27","28","29","30","31","32","33","34","35","36","37","38"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport EventConGraph from \"./EventConGraph\";\n\nimport React, { useEffect, useMemo, useRef } from \"react\";\nimport { useState } from \"react\";\nimport {\n  Route,\n  Routes,\n  Switch,\n  Redirect,\n  BrowserRouter as Router,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\n// import { useRouter } from \"next/router\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Helmet } from \"react-helmet\";\n// import ErrorComponent from \"./Components/ErrorComponent\";\nimport axios from \"axios\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"appContainer\" id=\"inner-container\">\n        <main id=\"page-wrap\">\n          <Router>\n            <Routes>\n              <Route path=\"/eventcongraph\" element={<EventConGraph />}></Route>\n            </Routes>\n          </Router>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/sussman/qs-widgets/frontend/src/EventConGraph.js",["39","40","41","42","43","44","45","46","47","48","49","50","51","52"],["53","54","55","56","57"],"import React, { useReducer } from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport \"./EventConGraph.css\";\nimport Highcharts from \"highcharts/highstock\";\nimport indicatorsAll from \"highcharts/indicators/indicators-all\";\nimport annotationsAdvanced from \"highcharts/modules/annotations-advanced\";\nimport priceIndicator from \"highcharts/modules/price-indicator\";\nimport fullScreen from \"highcharts/modules/full-screen\";\nimport stockTools from \"highcharts/modules/stock-tools\";\nimport QSIcon from \"./QSIconDark3.png\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport { NavDropdown, Dropdown } from \"react-bootstrap\";\nimport { ExclamationTriangle } from \"react-bootstrap-icons\";\n// import ExpiryFutSymbolButton from \"../../Components/ExpiryFutSymbolButton\";\n// import ProdNameToSym from \"../../AuxillaryFunctions/ProdNameToSym\";\nrequire(\"highcharts/modules/exporting\")(Highcharts);\nindicatorsAll(Highcharts);\nannotationsAdvanced(Highcharts);\npriceIndicator(Highcharts);\nfullScreen(Highcharts);\nstockTools(Highcharts);\n\n//Graph for OHLC, Volume, and OI for given future sym\nconst EODSummaryGraph = (props) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [sym, setSym] = useState(searchParams.get(\"sym\"));\n  const [width, setWidth] = useState(searchParams.get(\"width\"));\n  const [height, setHeight] = useState(searchParams.get(\"height\"));\n\n  const zoomButton = useRef(null);\n  const isMobile = useMediaQuery({ query: `(max-width: 1200px)` }); //state for detecting device that app is running on\n  const chartRef = useRef(null);\n  const containerRef = useRef(null);\n  const loadSpinnerRef = useRef(null);\n  const noneAvailRef = useRef(null);\n\n  const [categories, setCategories] = useState([[0, 0, 0, 0, 0, 0]]);\n  const [callData, setCallData] = useState([[0, 0, 0, 0, 0, 0]]);\n  const [putData, setPutData] = useState([[0, 0, 0, 0, 0, 0]]);\n\n  const [options, setOptions] = useState();\n\n  //used to store top right expiry buttons` DOM node and programatically scroll to left 0 on render\n  const expButtonsRef = useRef(null);\n\n  //SET HIGHCHARTS OPTIONS\n  useEffect(() => {\n    console.log(\n      searchParams.get(\"sym\"),\n      width,\n      height,\n      searchParams.toString()\n    );\n    try {\n      if (callData.includes(\"noneAvail\"))\n        containerRef.current.style.opacity = \"0.6\";\n    } catch {}\n    Highcharts.setOptions({\n      lang: {\n        decimalPoint: \".\",\n        thousandsSep: \",\",\n      },\n    });\n\n    chartRef.current = Highcharts.chart(containerRef.current, {\n      chartType: \"bar\",\n      colors: [\n        \"#B99840\",\n\n        \"#942B36\",\n        \"#024E73\",\n\n        \"#E1A33C\",\n        \"#B31E30\",\n        \"#B38904\",\n        \"#B3701E\",\n        \"#42B39A\",\n        \"#02757D\",\n        \"#024E73\",\n        \"#B3431E\",\n        \"#f39c12\",\n      ],\n      chart: {\n        width: width,\n        height: height,\n\n        marginBottom: 70,\n        backgroundColor: {\n          linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n          stops: [\n            [0, \"#054D3D\"],\n            [1, \"#076652\"],\n          ],\n        },\n        borderColor: \"#606063\",\n        plotBorderColor: \"#606063\",\n        borderWidth: 1,\n        // height: 550,\n        events: {\n          redraw() {\n            console.log(\"gg\", this.yAxis[0].getExtremes());\n            this.addAnnotation({\n              labelOptions: {\n                overflow: \"allow\",\n                y: -10,\n                shape: \"rect\",\n                borderColor: \"transparent\",\n                backgroundColor: \"transparent\",\n\n                // color: \"red\",\n                // className: \"noLabel\",\n                style: {\n                  //   color: \"red\",\n                  fontSize: `${Math.min(\n                    Math.max(12, (width / 100) * 1.9),\n                    17\n                  )}pt`,\n                },\n              },\n              shapeOptions: {\n                type: \"circle\",\n                r: 4,\n                strokeWidth: 0,\n              },\n              labels: [\n                {\n                  text: \"No\",\n                  align: \"center\",\n                  point: {\n                    y: this.yAxis[0].getExtremes().max / 2,\n                    x: -0.3,\n                    yAxis: 0,\n                    xAxis: 0,\n                  },\n                  style: {\n                    color: \"red\",\n                  },\n                },\n                {\n                  text: \"Yes\",\n                  align: \"center\",\n\n                  point: {\n                    y: -this.yAxis[0].getExtremes().max / 2,\n                    x: -0.3,\n                    yAxis: 0,\n                    xAxis: 0,\n                  },\n                  style: {\n                    color: \"green\",\n                  },\n                },\n              ],\n              draggable: \"\",\n              crop: false,\n            });\n          },\n          render: function () {\n            const chart = this,\n              renderer = chart.renderer;\n\n            try {\n              if (\n                document.getElementsByClassName(\"highcharts-data-table\")[0] &&\n                document.getElementsByClassName(\"highcharts-data-table\")[0]\n                  .style.display !== \"none\"\n              ) {\n                document.getElementsByClassName(\n                  \"highcharts-data-table\"\n                )[0].style.display = \"none\";\n                chart.viewData();\n              }\n              // chart.options.exporting.menuItemDefinitions.viewData.onclick();\n              // try {\n              //   chart.options.exporting.menuItemDefinitions.viewData.onclick();\n              // } catch {}\n            } catch {}\n            // Delete groups\n            if (chart.customImgGroup) {\n              chart.customImgGroup.destroy();\n            }\n\n            // Create groups\n            chart.customImgGroup = renderer.g(\"customImgGroup\").add();\n            console.log(chart);\n            // Render texts\n            chart.renderer\n              .image(QSIcon, chart.plotBox.width, 20, 50, 50)\n              .add(chart.customImgGroup);\n          },\n          load() {\n            if (!isMobile) {\n              let chart = this;\n              chart.stockTools.showhideBtn.click();\n            }\n          },\n        },\n      },\n      //   annotations: [\n      //     {\n      //       labelOptions: {\n      //         overflow: \"allow\",\n      //         y: -10,\n      //         shape: \"rect\",\n      //         borderColor: \"transparent\",\n      //         backgroundColor: \"transparent\",\n      //         style: {\n      //           fontSize: \"11pt\",\n      //         },\n      //       },\n      //       shapeOptions: {\n      //         type: \"circle\",\n      //         r: 4,\n      //         strokeWidth: 0,\n      //       },\n      //       labels: [\n      //         {\n      //           text: \"No\",\n      //           align: \"center\",\n      //           point: {\n      //             y:\n      //               (Math.max(\n      //                 Math.max(\n      //                   ...callData.map((callprice) => {\n      //                     return Math.abs(callprice);\n      //                   })\n      //                 ),\n      //                 Math.max(...putData)\n      //               ) /\n      //                 2) *\n      //               1.3,\n      //             x: putData.length - 2,\n      //             yAxis: 0,\n      //             xAxis: 0,\n      //           },\n      //           style: {\n      //             color: \"red\",\n      //           },\n      //         },\n      //         {\n      //           text: \"Yes\",\n      //           align: \"center\",\n      //           point: {\n      //             y:\n      //               -Math.max(\n      //                 Math.max(\n      //                   ...callData.map((callprice) => {\n      //                     return Math.abs(callprice);\n      //                   })\n      //                 ),\n      //                 Math.max(...putData)\n      //               ) / 2,\n      //             x: putData.length - 2,\n      //             yAxis: 0,\n      //             xAxis: 0,\n      //           },\n      //           style: {\n      //             color: \"green\",\n      //           },\n      //         },\n      //       ],\n      //       shapes: [\n      //         {\n      //           point: {\n      //             y: -20,\n      //             // x: settings.PlotLines[0].value,\n      //             yAxis: 0,\n      //             xAxis: 0,\n      //           },\n      //           //   fill: settings.PlotLines[0].color,\n      //         },\n      //         {\n      //           point: {\n      //             y: 20,\n      //             // x: settings.PlotLines[1].value,\n      //             yAxis: 0,\n      //             xAxis: 0,\n      //           },\n      //           //   fill: settings.PlotLines[1].color,\n      //         },\n      //       ],\n      //       draggable: \"\",\n      //       crop: false,\n      //     },\n      //   ],\n      tooltip: {\n        backgroundColor: \"transparent\",\n        style: {\n          color: \"#F0F0F0\",\n        },\n      },\n      labels: {\n        style: {\n          color: \"#707073\",\n        },\n      },\n      drilldown: {\n        activeAxisLabelStyle: {\n          color: \"#F0F0F3\",\n        },\n        activeDataLabelStyle: {\n          color: \"#F0F0F3\",\n        },\n      },\n      plotOptions: {\n        series: {\n          dataLabels: {\n            color: \"#F0F0F3\",\n            style: {\n              fontSize: \"13px\",\n            },\n          },\n          marker: {\n            lineColor: \"#333\",\n          },\n          stacking: \"normal\",\n          borderRadius: \"3%\",\n        },\n        boxplot: {\n          fillColor: \"#505053\",\n        },\n        candlestick: {\n          lineColor: \"white\",\n        },\n        errorbar: {\n          color: \"white\",\n        },\n      },\n      //   annotations: [\n      //     {\n      //       labels: [\n      //         {\n      //           point: { x: 0, y: -1500 },\n      //           padding: 25,\n      //           text: \"Label\",\n      //         },\n      //       ],\n      //     },\n      //   ],\n      legend: {\n        itemMarginBottom: 0,\n        itemMarginTop: 0,\n        margin: 0,\n        x: -30,\n        align: \"center\",\n        itemStyle: {\n          color: \"#E0E0E3\",\n        },\n        itemHoverStyle: {\n          color: \"#FFF\",\n        },\n        itemHiddenStyle: {\n          color: \"#606063\",\n        },\n        title: {\n          style: {\n            color: \"#C0C0C0\",\n          },\n        },\n      },\n      scrollbar: {\n        barBackgroundColor: \"#808083\",\n        barBorderColor: \"#808083\",\n        buttonArrowColor: \"#CCC\",\n        buttonBackgroundColor: \"#606063\",\n        buttonBorderColor: \"#606063\",\n        rifleColor: \"#FFF\",\n        trackBackgroundColor: \"#404043\",\n        trackBorderColor: \"#404043\",\n      },\n      title: {\n        text: \"YES\",\n        align: \"center\",\n        style: {\n          color: \"#E0E0E3\",\n          textTransform: \"uppercase\",\n          fontSize: \"16px\",\n        },\n      },\n      navigation: {\n        buttonOptions: {\n          symbolStroke: \"#DDDDDD\",\n          theme: {\n            fill: \"#505053\",\n            states: {\n              hover: {\n                fill: \"#707073\",\n              },\n              select: {\n                fill: \"#707073\",\n              },\n            },\n          },\n        },\n      },\n      navigator: {\n        handles: {\n          backgroundColor: \"#666\",\n          borderColor: \"#AAA\",\n        },\n        outlineColor: \"#CCC\",\n        maskFill: \"rgba(255,255,255,0.1)\",\n        series: {\n          color: \"#7798BF\",\n          lineColor: \"#A6C7ED\",\n        },\n        xAxis: {\n          gridLineColor: \"#505053\",\n        },\n      },\n      subtitle: {\n        style: {\n          color: \"#E0E0E3\",\n          textTransform: \"uppercase\",\n        },\n      },\n\n      xAxis: [\n        {\n          gridLineColor: \"white\",\n          labels: {\n            style: {\n              color: \"#E0E0E3\",\n            },\n          },\n          lineColor: \"#707073\",\n          minorGridLineColor: \"#505053\",\n          tickColor: \"#707073\",\n          title: {\n            style: {\n              color: \"#A0A0A3\",\n            },\n          },\n\n          categories: categories,\n          reversed: true,\n\n          labels: {\n            step: 1,\n          },\n          accessibility: {\n            description: \"call\",\n          },\n        },\n        {\n          gridLineColor: \"#444\",\n          labels: {\n            style: {\n              color: \"#E0E0E3\",\n            },\n          },\n          lineColor: \"#707073\",\n          minorGridLineColor: \"#505053\",\n          tickColor: \"#707073\",\n          title: {\n            style: {\n              color: \"#A0A0A3\",\n            },\n          },\n          // mirror axis on right side\n          opposite: true,\n          reversed: true,\n          categories: categories,\n          linkedTo: 0,\n          labels: {\n            step: 1,\n          },\n          accessibility: {\n            description: \"put\",\n          },\n        },\n      ],\n      yAxis: {\n        gridLineColor: \"#E0E0E3\",\n        labels: {\n          style: {\n            color: \"#E0E0E3\",\n          },\n        },\n        crosshair: {\n          label: {\n            backgroundColor: \"rgba(0, 0, 0, 0.60)\",\n          },\n        },\n        lineColor: \"#707073\",\n        minorGridLineColor: \"#505053\",\n        tickColor: \"#707073\",\n        tickWidth: 1,\n        title: {\n          style: {\n            color: \"#A0A0A3\",\n          },\n        },\n\n        title: {\n          text: null,\n        },\n        min: callData.includes(\"noneAvail\")\n          ? 0\n          : Math.max(\n              Math.max(\n                ...callData.map((callprice) => {\n                  return Math.abs(callprice);\n                })\n              ),\n              Math.max(...putData)\n            ) * -1,\n        max: callData.includes(\"noneAvail\")\n          ? 0\n          : Math.max(\n              Math.max(\n                ...callData.map((callprice) => {\n                  return Math.abs(callprice);\n                })\n              ),\n              Math.max(...putData)\n            ),\n\n        labels: {\n          style: {\n            color: \"#707073\",\n          },\n          formatter: function () {\n            return Math.abs(this.value);\n          },\n        },\n        accessibility: {\n          description: \"Price\",\n        },\n      },\n\n      series: [\n        {\n          name: \"Call\",\n          data: callData,\n          type: \"bar\",\n        },\n        {\n          name: \"Put\",\n          data: putData,\n          type: \"bar\",\n        },\n      ],\n      exporting: {\n        buttons: {\n          contextButton: {\n            menuItems: [\n              \"viewFullscreen\",\n              \"printChart\",\n              \"separator\",\n              \"downloadPNG\",\n              \"downloadJPEG\",\n              \"downloadPDF\",\n              \"downloadSVG\",\n              // eslint-disable-next-line no-restricted-globals\n              location.search.includes(\"qs=1\") ? \"separator\" : \"\",\n              // eslint-disable-next-line no-restricted-globals\n              location.search.includes(\"qs=1\") ? \"downloadCSV\" : \"\",\n              // eslint-disable-next-line no-restricted-globals\n              location.search.includes(\"qs=1\") ? \"downloadXLS\" : \"\",\n              \"separator\",\n              \"viewData\",\n            ],\n          },\n        },\n        menuItemDefinitions: {\n          viewFullscreen: {\n            onclick: function () {\n              this.fullscreen.toggle();\n            },\n          },\n          viewData: {\n            onclick: function () {\n              if (\n                document.getElementsByClassName(\"highcharts-data-table\")[0] &&\n                document.getElementsByClassName(\"highcharts-data-table\")[0]\n                  .style.display !== \"none\"\n              ) {\n                document.getElementsByClassName(\n                  \"highcharts-data-table\"\n                )[0].style.display = \"none\";\n              } else {\n                try {\n                  this.viewData.text = \"Hide data table\";\n                } catch {}\n                try {\n                  this.viewData();\n                } catch {}\n                document.getElementsByClassName(\n                  \"highcharts-data-table\"\n                )[0].style.display = \"\";\n              }\n            },\n            sourceWidth: 1000,\n          },\n        },\n        sourceWidth: 1000,\n      },\n      credits: {\n        enabled: false,\n      },\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options, callData, chartRef.current, isMobile]);\n\n  useEffect(() => {\n    setCallData([]);\n    setPutData([]);\n\n    try {\n      loadSpinnerRef.current.style.animationFillMode = \"forwards\";\n      loadSpinnerRef.current.style.visibility = \"visible\";\n      loadSpinnerRef.current.style.opacity = \"1\";\n      containerRef.current.style.opacity = callData.includes(\"noneAvail\")\n        ? \"0.6\"\n        : \"0.9\";\n    } catch {}\n\n    axios(\n      //   `https://quikoptions.info/api/straddles?straddleSym=${sym}`\n      `https://quikoptions.info/api/eventConData?eventConDataProdSym=${sym}`\n    ).then((response) => {\n      console.log(response.data);\n\n      try {\n        containerRef.current.style.opacity = callData.includes(\"noneAvail\")\n          ? \"0.6\"\n          : \"1\";\n\n        loadSpinnerRef.current.style.visibility = \"hidden\";\n        loadSpinnerRef.current.style.opacity = \"0\";\n\n        console.log(\"!!\");\n\n        if (response.data.Symbol === undefined) {\n          setCallData(\"noneAvail\");\n        } else {\n          //   setCategories(response.data.map((strike) => strike.StrikePrice));\n          //   setCallData(response.data.map((strike) => strike.CallPrice * -1));\n          //   setPutData(response.data.map((strike) => strike.PutPrice));\n\n          setCategories(\n            response.data.Futures[0].Expirations[0].Strikes.filter(\n              (strike) => strike.Call.Mid !== null && strike.Put.Mid !== null\n            ).map((strike) => strike.StrikePrice)\n          );\n          setCallData(\n            response.data.Futures[0].Expirations[0].Strikes.filter(\n              (strike) => strike.Call.Mid !== null && strike.Put.Mid !== null\n            ).map((strike) => strike.Call.Mid * -1)\n          );\n          setPutData(\n            response.data.Futures[0].Expirations[0].Strikes.filter(\n              (strike) => strike.Call.Mid !== null && strike.Put.Mid !== null\n            ).map((strike) => strike.Put.Mid)\n          );\n        }\n        console.log(\n          response.data.Futures[0].Expirations[0].Strikes.map(\n            (strike) => strike.Put.Last\n          ),\n          response.data.Futures[0].Expirations[0].Strikes.map(\n            (strike) => strike.Call.Last\n          ),\n          response.data.Futures[0].Expirations[0].Strikes.map(\n            (strike) => strike.StrikePrice\n          )\n        );\n\n        //   calldata = [];\n\n        console.log(\"Setdata\");\n        setOptions();\n      } catch {\n        // console.log(data);\n      }\n      try {\n        //make sure scroll position of expiry symbol buttons (top right) goes back to 0\n        expButtonsRef.current.__forceSmoothScrollPolyfill__ = true;\n        expButtonsRef.current.scrollTo(0, 0);\n      } catch {}\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.prodName]);\n\n  return (\n    <div style={{ width: `${width}px`, height: `${width}px` }}>\n      {/* <img\n        src={QSIcon}\n        style={{\n          pointerEvents: \"none\",\n          position: \"fixed\",\n          zIndex: \"200\",\n          width: `${Math.max(Math.min(width * height * 0.0005, 100), 55)}px`,\n          height: `${Math.max(Math.min(width * height * 0.0005, 100), 55)}px`,\n          left: `${\n            width - Math.max(Math.min(width * height * 0.0005, 100), 55) * 1.45\n          }px`,\n          top: \"25px\",\n          transform: `translate(-10%, -10%)`,\n          webkitTransform: `translate(-10%, -10%)`,\n        }}\n      ></img> */}\n      {callData.includes(\"noneAvail\") ? (\n        <div\n          ref={noneAvailRef}\n          style={{\n            transition: \"all 0.25s ease\",\n            position: \"absolute\",\n            // fontSize: \"1vw\",\n            // left: \"45%\",\n            // bottom: \"50%\",\n            width: `${width}px`,\n            height: `${height}px`,\n            zIndex: \"100\",\n\n            color: \"rgba(176, 192, 209,0.3)\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n\n              width: `${width}px`,\n              height: `${height}px`,\n              //   transform: \"translate(112.5%,-40%) scale(2.5,2.5)\",\n              opacity: \"0.55\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: `translate(-50%, -50%) scale(${\n                  (0.005 * `${width}`, 0.005 * `${width}`)\n                })`,\n                webkitTransform: `translate(-50%, -50%) scale(${\n                  (0.005 * `${width}`, 0.005 * `${width}`)\n                })`,\n              }}\n            >\n              <ExclamationTriangle sz=\"lg\" />\n              Plot Unavailable\n            </div>\n          </div>\n        </div>\n      ) : (\n        <>\n          <div\n            ref={loadSpinnerRef}\n            style={{\n              transition: \"all 0.25s ease\",\n              position: \"absolute\",\n              //   left: \"50%\",\n              //   bottom: \"50%\",\n              width: `${width}px`,\n              height: `${height}px`,\n              zIndex: \"100\",\n              //   transform: \"scale(3.5,3.5)\",\n            }}\n          >\n            <Spinner\n              animation=\"border\"\n              variant={props.lightMode ? \"secondary\" : \"light\"}\n            />\n          </div>\n        </>\n      )}\n      <div\n        ref={containerRef}\n        highcharts={Highcharts}\n        constructorType={\"stockChart\"}\n        updateArgs={[true, true, true]}\n        options={options}\n        allowChartUpdate={true}\n        immutable={false}\n        callback={useEffect}\n      />\n    </div>\n  );\n};\n\nexport default EODSummaryGraph;\n",{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":5,"column":17,"nodeType":"60","messageId":"61","endLine":5,"endColumn":26},{"ruleId":"58","severity":1,"message":"63","line":5,"column":28,"nodeType":"60","messageId":"61","endLine":5,"endColumn":35},{"ruleId":"58","severity":1,"message":"64","line":5,"column":37,"nodeType":"60","messageId":"61","endLine":5,"endColumn":43},{"ruleId":"58","severity":1,"message":"65","line":6,"column":10,"nodeType":"60","messageId":"61","endLine":6,"endColumn":18},{"ruleId":"58","severity":1,"message":"66","line":10,"column":3,"nodeType":"60","messageId":"61","endLine":10,"endColumn":9},{"ruleId":"58","severity":1,"message":"67","line":11,"column":3,"nodeType":"60","messageId":"61","endLine":11,"endColumn":11},{"ruleId":"58","severity":1,"message":"68","line":13,"column":3,"nodeType":"60","messageId":"61","endLine":13,"endColumn":14},{"ruleId":"58","severity":1,"message":"69","line":14,"column":3,"nodeType":"60","messageId":"61","endLine":14,"endColumn":13},{"ruleId":"58","severity":1,"message":"70","line":17,"column":10,"nodeType":"60","messageId":"61","endLine":17,"endColumn":25},{"ruleId":"58","severity":1,"message":"71","line":17,"column":27,"nodeType":"60","messageId":"61","endLine":17,"endColumn":40},{"ruleId":"58","severity":1,"message":"72","line":19,"column":10,"nodeType":"60","messageId":"61","endLine":19,"endColumn":23},{"ruleId":"58","severity":1,"message":"73","line":20,"column":10,"nodeType":"60","messageId":"61","endLine":20,"endColumn":16},{"ruleId":"58","severity":1,"message":"74","line":22,"column":8,"nodeType":"60","messageId":"61","endLine":22,"endColumn":13},{"ruleId":"58","severity":1,"message":"75","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":27},{"ruleId":"58","severity":1,"message":"76","line":13,"column":10,"nodeType":"60","messageId":"61","endLine":13,"endColumn":19},{"ruleId":"58","severity":1,"message":"77","line":15,"column":8,"nodeType":"60","messageId":"61","endLine":15,"endColumn":22},{"ruleId":"58","severity":1,"message":"78","line":16,"column":10,"nodeType":"60","messageId":"61","endLine":16,"endColumn":21},{"ruleId":"58","severity":1,"message":"79","line":16,"column":23,"nodeType":"60","messageId":"61","endLine":16,"endColumn":31},{"ruleId":"58","severity":1,"message":"80","line":29,"column":24,"nodeType":"60","messageId":"61","endLine":29,"endColumn":39},{"ruleId":"58","severity":1,"message":"81","line":30,"column":15,"nodeType":"60","messageId":"61","endLine":30,"endColumn":21},{"ruleId":"58","severity":1,"message":"82","line":31,"column":17,"nodeType":"60","messageId":"61","endLine":31,"endColumn":25},{"ruleId":"58","severity":1,"message":"83","line":32,"column":18,"nodeType":"60","messageId":"61","endLine":32,"endColumn":27},{"ruleId":"58","severity":1,"message":"84","line":34,"column":9,"nodeType":"60","messageId":"61","endLine":34,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":442,"column":11,"nodeType":"87","messageId":"88","endLine":442,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":469,"column":11,"nodeType":"87","messageId":"88","endLine":469,"endColumn":17},{"ruleId":"85","severity":1,"message":"89","line":499,"column":9,"nodeType":"87","messageId":"88","endLine":499,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":523,"column":9,"nodeType":"87","messageId":"88","endLine":523,"endColumn":15},{"ruleId":"90","severity":2,"message":"91","line":560,"column":15,"nodeType":"60","messageId":"92","endLine":560,"endColumn":23,"suppressions":"93"},{"ruleId":"90","severity":2,"message":"91","line":562,"column":15,"nodeType":"60","messageId":"92","endLine":562,"endColumn":23,"suppressions":"94"},{"ruleId":"90","severity":2,"message":"91","line":564,"column":15,"nodeType":"60","messageId":"92","endLine":564,"endColumn":23,"suppressions":"95"},{"ruleId":"96","severity":1,"message":"97","line":609,"column":6,"nodeType":"98","endLine":609,"endColumn":53,"suggestions":"99","suppressions":"100"},{"ruleId":"96","severity":1,"message":"101","line":690,"column":6,"nodeType":"98","endLine":690,"endColumn":22,"suggestions":"102","suppressions":"103"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'TransitionGroup' is defined but never used.","'CSSTransition' is defined but never used.","'useMediaQuery' is defined but never used.","'Helmet' is defined but never used.","'axios' is defined but never used.","'useReducer' is defined but never used.","'useParams' is defined but never used.","'DropdownButton' is defined but never used.","'NavDropdown' is defined but never used.","'Dropdown' is defined but never used.","'setSearchParams' is assigned a value but never used.","'setSym' is assigned a value but never used.","'setWidth' is assigned a value but never used.","'setHeight' is assigned a value but never used.","'zoomButton' is assigned a value but never used.","no-dupe-keys","Duplicate key 'labels'.","ObjectExpression","unexpected","Duplicate key 'title'.","no-restricted-globals","Unexpected use of 'location'.","defaultMessage",["104"],["105"],["106"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'categories', 'height', 'putData', 'searchParams', and 'width'. Either include them or remove the dependency array. Mutable values like 'chartRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["107"],["108"],"React Hook useEffect has missing dependencies: 'callData' and 'sym'. Either include them or remove the dependency array.",["109"],["110"],{"kind":"111","justification":"112"},{"kind":"111","justification":"112"},{"kind":"111","justification":"112"},{"desc":"113","fix":"114"},{"kind":"111","justification":"112"},{"desc":"115","fix":"116"},{"kind":"111","justification":"112"},"directive","","Update the dependencies array to be: [options, callData, isMobile, searchParams, width, height, categories, putData]",{"range":"117","text":"118"},"Update the dependencies array to be: [callData, props.prodName, sym]",{"range":"119","text":"120"},[16804,16851],"[options, callData, isMobile, searchParams, width, height, categories, putData]",[19585,19601],"[callData, props.prodName, sym]"]